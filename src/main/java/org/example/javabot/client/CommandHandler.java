package org.example.javabot.client;

import lombok.SneakyThrows;
import org.example.javabot.config.BotConfig;
import org.example.javabot.service.ExcelParserService;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.client.okhttp.OkHttpTelegramClient;
import org.telegram.telegrambots.meta.api.methods.GetFile;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.CallbackQuery;
import org.telegram.telegrambots.meta.api.objects.Document;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import org.telegram.telegrambots.meta.generics.TelegramClient;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URL;
import java.util.*;

@Component
public class CommandHandler {

    private final BotConfig botConfig;
    private final TelegramClient telegramClient;
    private ExcelParserService excelParserService;
    private final MenuService menuService;

    public CommandHandler(BotConfig botConfig, ExcelParserService excelParserService, MenuService menuService) {
        this.botConfig = botConfig;
        this.telegramClient = new OkHttpTelegramClient(botConfig.getBotToken());
        this.excelParserService = excelParserService;
        this.menuService = menuService;
    }

    private final Map<Long, Set<String>> userCoursesMap = new HashMap<>();

    public void handleCallbackQuery(CallbackQuery callbackQuery) {
        var data = callbackQuery.getData();
        var chatId = callbackQuery.getFrom().getId();

        // 2. –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –∫—É—Ä—Å:
        String fileName1 = switch (data) {
            case "first_course" -> "1course.xlsx";
            case "second_course" -> "2course.xlsx";
            case "third_course" -> "3course.xlsx";
            default -> null;
        };

        if (data.startsWith("GROUP_")) {
            String groupName = data.substring("GROUP_".length());

            Set<String> selectedCourses = userCoursesMap.get(chatId);
            if (selectedCourses == null || selectedCourses.isEmpty()) {
                sendMessage(chatId, "–ö—ç—à –±—ã–ª –æ—á–∏—â–µ–Ω, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å.");
                menuService.sendMenu(chatId);
                return;
            }

            StringBuilder fullSchedule = new StringBuilder();
            for (String fileName : selectedCourses) {
                File file = new File("courses/" + fileName);
                if (!file.exists()) {
                    fullSchedule.append("‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ").append(fileName).append("\n\n");
                    continue;
                }

                String schedule = excelParserService.getScheduleByGroup(file, groupName);
                if(!schedule.isEmpty() && !schedule.equals("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –ª–∏—Å—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≥—Ä—É–ø–ø—ã: " + groupName)) {
                    fullSchedule.append("üìò ").append(fileName).append("\n").append(schedule).append("\n\n");
                }

            }

            if(fullSchedule.isEmpty()){
                sendMessage(chatId, "–í—ã–±—Ä–∞–Ω–Ω–∞—è –≥—Ä—É–ø–ø–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫—É—Ä—Å—É!");
            }else {
                sendMessage(chatId, fullSchedule.toString());
            }
            return;
        }



        if (fileName1 != null) {
            // –î–æ–±–∞–≤–ª—è–µ–º –∫—É—Ä—Å –≤ —Å–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö
            userCoursesMap.computeIfAbsent(chatId, k -> new HashSet<>()).add(fileName1);
            sendMessage(chatId, "‚úÖ –ö—É—Ä—Å –¥–æ–±–∞–≤–ª–µ–Ω: " + fileName1 + "\n–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É.");
            sendGroupSelectionMenu(chatId, new File("courses/" + fileName1)); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å –≥—Ä—É–ø–ø–∞–º–∏
        } else {
            sendMessage(chatId, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.");
        }
    }

    @SneakyThrows
    public void sendMessage(Long chatId, String messageText) {
        SendMessage message = SendMessage.builder().text(messageText).chatId(chatId).build();
        telegramClient.execute(message);
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≥—Ä—É–ø–ø
    @SneakyThrows
    public void sendGroupSelectionMenu(Long chatId, File excelFile) {
        List<String> groups = excelParserService.getGroupNames(excelFile);
        InlineKeyboardMarkup markup = menuService.createGroupButtons(groups);

        SendMessage message = SendMessage.builder().text("–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é –≥—Ä—É–ø–ø—É:").chatId(chatId).build();
        message.setReplyMarkup(markup);

        try {
            telegramClient.execute(message); // –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ execute(...) –µ—Å–ª–∏ —Ç—ã –≤ –∫–ª–∞—Å—Å–µ TelegramLongPollingBot
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

 
    //–ó–∞–≥—Ä—É–∑–∫–∞ Exel —Ñ–∞–π–ª–∞ –≤ –±–æ—Ç–∞
    @SneakyThrows
    public void processExcelFile(Long chatId, Document document) {
        try {
            String fileId = document.getFileId();
            String originalFileName = document.getFileName(); // –Ω–∞–ø—Ä. "1course.xlsx"

            // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Ñ–∞–π–ª ‚Äî Excel
            if (!originalFileName.endsWith(".xlsx")) {
                telegramClient.execute(new SendMessage(chatId.toString(), "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .xlsx"));
                return;
            }

            // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
            GetFile getFile = new GetFile(fileId);
            org.telegram.telegrambots.meta.api.objects.File tgFile = telegramClient.execute(getFile);

            // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª
            String fileUrl = "https://api.telegram.org/file/bot" + botConfig.getBotToken() + "/" + tgFile.getFilePath();

            // –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
            File saveDir = new File("courses");
            if (!saveDir.exists()) saveDir.mkdirs();

            // –ü—É—Ç—å –∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É
            File savedFile = new File(saveDir, originalFileName);

            // –°–∫–∞—á–∏–≤–∞–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
            try (InputStream in = new URL(fileUrl).openStream();
                 OutputStream out = new FileOutputStream(savedFile)) {
                in.transferTo(out);
            }

            System.out.println("–°–æ—Ö—Ä–∞–Ω—ë–Ω —Ñ–∞–π–ª: " + savedFile.getAbsolutePath());

            // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            telegramClient.execute(new SendMessage(chatId.toString(), "–§–∞–π–ª " + originalFileName + " –∑–∞–≥—Ä—É–∂–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω —É—Å–ø–µ—à–Ω–æ."));

        } catch (Exception e) {
            e.printStackTrace();
            telegramClient.execute(new SendMessage(chatId.toString(), "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: " + e.getMessage()));
        }
    }

}
